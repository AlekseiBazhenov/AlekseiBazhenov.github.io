---
layout: post
title:  "Откуда берется legacy код"
date:   2020-10-17 11:12:57 +0400
categories: tech
---
Ну вот и настал момент, когда мой профессиональный опыт говорит, что пора бы им поделиться с другими. Поехали.

В последнее время слово «legacy» в программировании стало синонимом непонятного кода, в котором трудно разобраться. Поэтому я тоже буду его использовать в таком значении.

Сразу скажу что поддерживать и рефакторить старый код я люблю (и думаю, что умею). А копаться в спагетти-коде даже интересно. Иногда это напоминает игру в детектива :)

К чему это я? Недавно поменял место работы. Знал, что проекту много лет и заранее готовился к тому, что в нем будет много legacy. Сейчас я занимаюсь анализом и внутренними улучшениями проекта в одном из топовых российских банков. 

Прошло уже 2 месяца. Все это время я вплотную работаю со старым кодом. Так сложилось, что последний месяц я удаляю из проекта мусор. Зачем? Если в нескольких словах, то он просто не приносит никакой пользы бизнесу и загрязняет проект. А еще  добавляет серьезные неудобства при изменении кода, который находится рядом с ним. 

Есть много разных статей и видео на тему как жить и что делать с legacy кодом. Откуда же он берется? 
Из личного опыта, самой главной проблемой проектов начавшихся много лет назад является неиспользуемый код. Это один из самых распространенных «запахов» кода. И тут само собой напрашивается сравнение с бытовым мусором, который долгое время не выбрасывают, а складывают где-нибудь в квартире :)

Обычно по мере развития любого проекта остается неиспользуемый код. Сначала его не решаются удалить, вдруг что-то пригодится в ближайшее время, а потом про него просто забывают. Когда спрашивал коллег, то отвечали примерно так: «Удалить хотел, но вдруг понадобится». Каждый раз было немного странно слышать такой ответ. Сейчас даже в небольших проектах используют систему контроля версий.

И такое происходит не только со старыми фичами. После разработки новых остается код, написанный «на будущее». Со временем накапливается хотя ни разу не вызывался. С ним вообще непонятно что делать. Так как добавлен недавно, то возможно кто-то из коллег все таки планирует его использовать.

Но все же не весь унаследованный код по умолчанию плохой. За свою карьеру мне встречались несколько проектов, в которых и изменения вносились легко, и поддерживались они достаточно просто.

Вспоминая те проекты, я понимаю, что их разработчики заботились об актуальности кода. Понимая, что самим ребятам и их коллегам придется работать над ними долгое время, вкладывали время в поддержание кодовой базы в чистоте. Не смотря на то, что иногда использовались не самые последние технологии, сказать про те проекты, что они «legacy» не получается.

Вывод: разработчики сами поддерживают запущенность в своих проектах, оставляя код без внимания.

И в конце несколько советов как улучшить состояние кода.
- Начать очищать. Показать на своем примере коллегам направление, в котором нужно двигаться.
- Многие знают про правило бойскаута. Нужно эти знания применять. К сожалению, делают это немногие разработчики.
- Периодически проверять код lint’ом и проводить в проекте чистку. Чтобы проверять код постоянно, можно прикрутить lint к CI. Сделать это на своем проекте в планах на ближайшее будущее. 
- Прочитать «Чистый код» Мартина и «Рефакторинг» Фаулера.
